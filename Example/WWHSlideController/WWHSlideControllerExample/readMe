这个框架整体构想是：根据框架的状态（动态状态和静态状态）来确定要做什么，也就是说这个框架的架构是基于状态的。
动态状态：在滑动过程中，框架可能的七种情况。
静态状态：滑动结束后，框架可能的三种情况。
总结：可以先把状态细化，再进行抽象。也可以先抽象，再进行细化。

遇到的问题：
1.在panEnd的时候，将动画时间延长，会发现动画抖动一下再流畅运行。
    解决方案：在panEnd结束时，记录下此时menu的frame，并设置其为menu的frame，然后再做处理。至于为什么会抖动，这对我来说还是个问题。（menu抖动，为什么进行相似操作的home没有抖动）
2.同一，在进行点击回复或者打开menu的时候，也会抖动。
    解决方案：同一。注意：在动画结束之后，重新设置menu的frame为之前的frame。
＊3.在设置阴影的时候，务必把shadowPath加上去。因为绘制阴影是比较复杂的，特别是在动画过程中要不断的重绘阴影，这样很影响动画效果。因为是规则的形状，所以给个path会大大的减少这种复杂性。
4.在进行计算的时候，注意补偿因子的思想。
＊5.写了一个组件框架，注意要有一个实例来调用他的方法等。一般的实例用的比较多的用单例，这个框架用的是runtime的动态添加属性。因为menu都是UIViewController，所以可以给UIViewController一个类别，来动态的生成一个实例属性。
＊6.当menu显示完全的时候（以leftMenu为例），这时候我们是不希望用户继续朝右边滑动的，这时候就是一个不友好的操作，此时返回一个不友好的状态，不做任何操作就好了。当时遇到的一个问题是：当前_staticState为left（显示左边菜单），用户朝左微微滑动home然后快速朝右滑，menu和home会出现脱节的情况，这就是一种不友好的操作。